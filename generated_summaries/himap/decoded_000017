In this section, we give a brief overview of the recent work of STV and tallying @cite . 
 We refer to the survey by the ' @cite and @cite . 
 In @cite , the authors consider the problem of tallying in the context of tallying encrypted and Risk-Limiting @cite , and for and Risk-Limiting @cite , which showed that it is possible to achieve the optimal confidence bound for the STV problem. 
 In this paper, we show that our approach can be used to solve the STV problem in @cite , where the goal is to minimize the votes of the votes in the network and do not consider the votes that are not necessarily win with respect to the number of candidates in the voter system @cite @cite @cite . 
 Our approach is also closely related to the one presented in this paper because it is not possible to find the optimal solution of the network which is the same as we do. 
 Our work is the first to show that the use of tallying counters and tallying can be more useful for tallying such as the @cite , STV @cite , Approval @cite and nonranked @cite . 
 In @cite , the authors use a voter model to compute the votes of the election result. 
 In this paper, we use the voter of the voter model as in @cite . 
 In this model, the voter is assumed to be a voter of the voter In this work, we consider the election problem as an optimization problem. 
 In our work, we do not need to keep the votes that are not confident but we are interested in the form of tallying and the and tallying @cite and @cite , which is the same paper in @cite , @cite , and @cite ). 
 In this paper, <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank>
