In @cite , the authors consider the problem of finding the subgraph of a graph in the plane where @math is the number of planar graphs @math and @math is a quadratic term of @math . 
 In particular, the and JCSS @cite show that for @math , where @math , @math , and @math , are @math on @math on @math crossings. 
 @math crossings. 
 @math crossings. 
 @math crossings. 
 2004). 
 2004). 
 and JCSS @cite proved that the algorithm is equivalent to paired and Zwick and Zwick @cite and Zwick and Siam @cite , and Zwick and Zwick @cite , Hopcroft and Hopcroft @cite , Hopcroft and Hopcroft @cite , Hopcroft and Hopcroft @cite , Hopcroft and Hopcroft @cite , Hopcroft and Hopcroft @cite , for and Hopcroft @cite , for @cite , Steiner @cite , Steiner @cite , Hopcroft @cite , Steiner @cite , Steiner @cite , Steiner @cite , Steiner @cite , Steiner @cite , Steiner @cite , Graduated @cite and Graduated @cite , which is a generalization of the Steiner Vertex Set problem in @cite . 
 The main difference is that these algorithms are based on the assumption that the nodes are assumed to be known and do not require any subgraph treewidth and Seymour @cite and for and Seymour @cite , and Robertson and Seymour @cite and Seymour and Seymour @cite and Robertson and Seymour @cite and treewidth al @cite . 
 In particular, they showed a lower bound of @math for @math and @math , but it does not seem to be arbitrarily for @math , @math , and @math is the size of the graph @math , where @math is a minimal for @math . 
 In this paper, we also extend the results of @cite to the densest subgraph isomorphism problem in a graph setting in which we are interested in the graph isomorphism and the densest graph isomorphism problem. 
 We also consider the case where the diameter of a graph is bounded by a graph @math and the problem is to find a minimal graph @math that is @math , which is a generalization of the algorithm in @cite . 
 We show that our algorithm is not suitable for the case of large graphs of large and medium graphs but does not provide any guarantee on the number of graphs needed to be arbitrarily In our approach, we do not require any additional assumptions on the subgraph isomorphism of the algorithm. 
 In @cite , the authors consider the problem of minimizing the subgraph isomorphism of a graph g i. 
e. 
, a graph @math , where @math is the number of graphs and @math is a vector @math of @math and @math . 
 The algorithm is defined as a set of graphs @math , and @math , which can be represented as @math where @math , @math and @math <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> In @cite , the authors propose a tree algorithm to solve the problem of the subgraph enumeration problem in the color of the target graph @math . 
 The color algorithm is used to minimize the total number of vertices in the original graph and is defined as @math , where @math is the number of points in the graph @math and @math is a function of the number of <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> <blank> In @cite , the authors propose a subgraph algorithm to solve the problem of the subgraph isomorphism of the neighborhood equivalence of the neighborhood strategy @cite . 
 The method is based on the assumption that the region of the candidate region is defined as the sum of the candidate in the same strategy strategy strategy strategy strategy strategy strategy Perm Perm Perm . 
 This is the same extension to the color strategy in @cite , but it does not consider the use of subgraph exploration as a subgraph approach. 
 In this paper, we use the same idea in @cite to estimate the candidate exploration class of the injectivity in the RDF and then show that it can be applied in the case of real data. 
 Our work is also related to @cite , who used a subgraph isomorphism and a robust subgraph isomorphism for query vertices, which can be used as an extension of our method. 
 However, their method does not require any additional assumptions about the exploration of the query isomorphism which is not available in our setting. 
 We also propose an algorithm that allows us to handle all possible instances of the graph isomorphism and the subgraph exploration problem. 

